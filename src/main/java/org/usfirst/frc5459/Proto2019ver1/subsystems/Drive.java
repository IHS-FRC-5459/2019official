// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5459.Proto2019ver1.subsystems;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import org.usfirst.frc5459.Proto2019ver1.Robot;
import org.usfirst.frc5459.Proto2019ver1.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMTalonSRX;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    private WPI_TalonSRX cont3;
    private WPI_TalonSRX cont4;
    private SpeedControllerGroup groupRight;
    private WPI_TalonSRX cont1;
    private WPI_TalonSRX cont2;
    private SpeedControllerGroup groupLeft;
    private RobotDrive drivetrain;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Drive() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        cont3 = new WPI_TalonSRX(3);
        addChild("Cont3",cont3);
        cont3.setInverted(false);
        
        cont4 = new WPI_TalonSRX(4);
        addChild("Cont4",cont4);
        cont4.setInverted(false);
        
        groupRight = new SpeedControllerGroup(cont3, cont4  );
        addChild("GroupRight",groupRight);
        
        
        cont1 = new WPI_TalonSRX(1);
        addChild("Cont1",cont1);
        cont1.setInverted(false);
        
        cont2 = new WPI_TalonSRX(2);
        addChild("Cont2",cont2);
        cont2.setInverted(false);
        
        groupLeft = new SpeedControllerGroup(cont1, cont2  );
        addChild("GroupLeft",groupLeft);

        
        drivetrain = new RobotDrive(groupLeft, groupRight);
        
        drivetrain.setSafetyEnabled(false);
        drivetrain.setExpiration(0.1);
        drivetrain.setSensitivity(0.5);
        drivetrain.setMaxOutput(1.0);

        drivetrain.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    public void setRight(double power){
        if(Robot.flipped == false){
            groupRight.set(power);
        }
        else if(Robot.flipped == true){
            groupLeft.set(power *-1);
        }
        
    }
    public void setLeft(double power){
        if(Robot.flipped == false){
            groupLeft.set(power);
        }
        else if(Robot.flipped == true){
            groupRight.set(power *-1);
        }
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

