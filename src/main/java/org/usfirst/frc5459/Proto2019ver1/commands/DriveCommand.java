// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5459.Proto2019ver1.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc5459.Proto2019ver1.Robot;

/**
 *
 */
public class DriveCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drive);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {

    /*
        if(Math.abs(Robot.oi.joystick1.getY())   >= .05){
        
        Robot.drive.setLeft(Math.pow(Robot.oi.joystick1.getY(), 3));
        }
        //System.out.println("joystick 1 is: "+Robot.oi.joystick1.getY());
        if(Math.abs(Robot.oi.joystick2.getY()) >= .05){
            Robot.drive.setRight(Math.pow(Robot.oi.joystick2.getY(),3));
            }
*/         
            double j1, j2 ;

            j1 = Robot.oi.joystick1.getY() ;
            j2 = Robot.oi.joystick2.getY() ;

            Robot.drive.setLeft(j1);
            Robot.drive.setRight(j2);

            SmartDashboard.putString ("Joysticks",   "1:" + j1 + " 2:" +j2);
}
//System.out.println("joystick 1 is: "+Robot.oi.joystick1.getY());
/*if(Math.abs(Robot.oi.joystick2.getY()) >= .05){
    Robot.drive.setRight(Math.pow(Robot.oi.joystick2.getY(),3));
    }
    }*/

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
